% This file was created with JabRef 2.7.2.
% Encoding: ISO8859_1


@BOOK{strunk:white,
  title = {The Elements of Style},
  publisher = {Allyn and Bacon},
  year = {2000},
  author = {William Strunk Jr. and E. B. White},
  edition = {4th},
  keywords = {scglib}
}

@INPROCEEDINGS{paper:example,
  author = {First Author and Martin Schoeberl},
  title = {Real-Time Alternative Bread Baking in {Mendocino}},
  booktitle = {Proceedings of the 113th IEEE Symposium on Real-time Computing
	(ISORC 2189)},
  year = {2189},
  address = {Mendocino, Calofornia},
  month = {February},
  publisher = {IEEE},
  owner = {martin},
}


@book{Sutherland2010,
address = {New York},
author = {Sutherland, Stuart and Davidmann, Simon and Flake, Peter},
edition = {2.},
pages = {418},
publisher = {Springer},
title = {{SystemVerilog for Design}},
year = {2010}
}

@misc{IEEE:18002,
author = {IEEE},
title = {{1800.2-2017 - IEEE Standard for Universal Verification Methodology Language Reference Manual}},
url = {https://ieeexplore.ieee.org/document/7932212},
urldate = {2020-09-04}
}

@Electronic{Snyder2019,
author = {Snyder, Wilson},
pages = {13},
title = {{Verilator: Your Big 4th Simulator: Roadmap}},
howpublished = {\url{https://www.veripool.org/papers/Verilator_Roadmap_CHIPS2019b.pdf}},
year = {2019}
}


@article{Asanovic2016,
abstract = {Rocket Chip is an open-source Sysem-on-Chip design generator that emits synthesizable RTL. It leverages the Chisel hardware construction language to compose a library of sophisticated generators for cores, caches, and interconnects into an integrated SoC. Rocket Chip generates general-purpose processor cores that use the open RISC-V ISA, and provides both an in-order core generator (Rocket) and an out-of-order core generator (BOOM). For SoC designers interested in utilizing heterogeneous specialization for added efficiency gains, Rocket Chip supports the integration of custom accelerators in the form of instruction set extensions, coprocessors, or fully independent novel cores. Rocket Chip has been taped out (manufactured) eleven times, and yielded functional silicon prototypes capable of booting Linux.},
author = {Asanovic, Krste et al.},
doi = {10.1023/A:1010000313106},
file = {:C$\backslash$:/Users/kaspe/Downloads/EECS-2016-17.pdf:pdf},
journal = {EECS Department, University of California, Berkeley, Technical Report},
number = {UCB/EECS-2016-17},
title = {{The Rocket Chip Generator}},
url = {http://www2.eecs.berkeley.edu/Pubs/TechRpts/2016/EECS-2016-17.html},
year = {2016}
}



@misc{ghdl, title={GHDL}, howpublished={https://github.com/ghdl/ghdl}, author={Tristan Gingold}}

@MISC{Yosys,
	author = {Clifford Wolf},
	title = {Yosys Open SYnthesis Suite},
	howpublished = "\url{http://www.clifford.at/yosys/}"
}

@MISC{ghdl-yosys-plugin,
	author = {Tristan Gingold},
	title = {ghdl-yosys-plugin},
	howpublished = "\url{https://github.com/ghdl/ghdl-yosys-plugin}"
}
@MISC{vhdl2verilog,
	author = {Simon Andersen},
	title = {VHDL2Verilog},
	howpublished = "\url{https://github.com/chisel-uvm/vhdl2verilog}"
}

@MISC{verilator,
	author = {Veripool},
	title = {Verilator},
	howpublished = "\url{https://www.veripool.org/wiki/verilator}"
}

%% Artificial intelligence a modern approach
@book{russell2002artificial,
  title={Artificial intelligence: a modern approach},
  author={Russell, Stuart and Norvig, Peter},
  year={2002},
  publisher={Prentice Hall}
}

@MISC{axi4standard,
	author = {ARM},
	title = {AMBA AXI and ACE Protocol Specification AXI3, AXI4, and AXI4-Lite ACE and ACE-Lite},
	howpublished = "\url{https://developer.arm.com/documentation/ihi0022/e/}"
}

@MISC{axi4vip,
	author = {Xilinx},
	title = {AXI Verification IP (VIP)},
	howpublished = "\url{https://www.xilinx.com/products/intellectual-property/axi-vip.html}"
}

@INPROCEEDINGS{rfuzz2018,  
  author = {Laeufer, Kevin and Koenig, Jack and Kim, Donggyu and Bachrach, Jonathan and Sen, Koushik},  booktitle = {2018 IEEE/ACM International Conference on Computer-Aided Design (ICCAD)},   
  title = {RFUZZ: Coverage-Directed Fuzz Testing of RTL on FPGAs},   
  year={2018},  
  volume={},  
  number={},  
  pages={1-8},  
  doi={10.1145/3240765.3240842}
}

@Misc{chisel:formal,
  title        = {Chisel Formal Verification},
  howpublished = {\url{https://github.com/tdb-alcorn/chisel-formal}},
  author       = {Tom Alcorn},
  note         = {Accessed: 2021-06-03},
}

@Misc{chisel:kiwi-formal,
  title        = {Chisel Formal Verification Extension},
  howpublished = {\url{https://github.com/ekiwi/kiwi-formal}},
  author       = {Kevin Laeufer},
  note         = {Accessed: 2021-06-03},
}

@Misc{chisel:dank-formal,
  title        = {Chisel Formal Verification Extension},
  howpublished = {\url{https://github.com/danielkasza/dank-formal}},
  author       = {Daniel Kasza},
  note         = {Accessed: 2021-06-03},
}

@INPROCEEDINGS{riscvdv,  
  author={Ahmadi-Pour, Sallar and Herdt, Vladimir and Drechsler, Rolf},  booktitle={MBMV 2021; 24th Workshop},   
  title={Constrained Random Verification for RISC-V: Overview, Evaluation and Discussion},  
  year={2021}
}